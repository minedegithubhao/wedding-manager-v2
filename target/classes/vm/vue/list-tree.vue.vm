<template>
  <a-card :bordered="false">
    <div class="table-page-search-wrapper">
      <a-form layout="inline">
        <a-row :gutter="48">
#foreach($column in $columns)
#if($column.query)
#set($dictType=$column.dictType)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else  
#set($comment=$column.columnComment)
#end  
#if($column.htmlType == "input")
          <a-col :md="5" :sm="15">
            <a-form-item label="${comment}">
              <a-input placeholder="${comment}" v-model="queryParam.${column.javaField}"/>
            </a-form-item>
          </a-col>
#elseif($column.htmlType == "select")
    #if($dictType != "")
          <a-col :md="5" :sm="15">
            <a-form-item label="${comment}">
                <a-select placeholder="${comment}" v-model="queryParam.${column.javaField}">
                    <a-select-option v-for="(b, index) in ${column.javaField}Array"
                                     :key="index"
                                     :value="b.dictValue">{{ b.dictLabel }}</a-select-option>
                </a-select>
            </a-form-item>
          </a-col>
    #end
#end
#end
#end	
          <a-col :md="8" :sm="24">
            <span class="table-page-search-submitButtons">
              <a-button type="primary" @click="$refs.table.refresh(true)">查询</a-button>
              <a-button style="margin-left: 8px" @click="() => queryParam = {}">重置</a-button>
            </span>
          </a-col>
        </a-row>
      </a-form>
    </div>
     <div class="table-operator">
      <a-button v-if="addEnable" type="primary" icon="plus" @click="$refs.modal.add()">新建</a-button>
      <a-dropdown v-if="removeEnable&&selectedRowKeys.length > 0">
        <a-popconfirm :title="`确认删除${selectedRowKeys.length}条数据?`"
                    @confirm="() => delByIds(selectedRowKeys)">
          <a-button type="danger"
                    icon="delete">删除</a-button>
        </a-popconfirm>
      </a-dropdown>
    </div>
    <s-table
      size="default"
      ref="table"
      rowKey="${pkColumn.javaField}"
      :pagination="pagination"
      :loading="loading"
      :columns="columns"
      :data="data"
    >
#foreach($column in $columns)
    #set($dictType=$column.dictType)
    #set($javaField=$column.javaField)
    #if($column.list)
        #if($dictType != "")
      <span slot="${javaField}Slot" slot-scope="text">
         {{ text | dictFilter(${javaField}Map) }}
      </span>
        #end
    #end
#end
      <span slot="action" slot-scope="text, record">
        <a-icon type="edit"
                v-if="editEnabel"
                class="icon-action edit"
                @click="handleEdit(record)" />
        <a-icon type="plus"
                v-if="addEnable"
                class="icon-action add"
                @click="handleAdd(record.${pkColumn.javaField})" />
        <a-popconfirm title="确认删除本条记录?"
                      v-if="removeEnable"
                      @confirm="() => delByIds([record.${pkColumn.javaField}])">
          <a-icon type="delete"
                  class="icon-action delete" />
        </a-popconfirm>
      </span>
    </s-table>
    <${className}-modal ref="modal" @ok="handleOk"/>
  </a-card>
</template>

<script>
import { Table as T } from 'ant-design-vue'
import { get${ClassName}List, del${ClassName} } from '@/api/${moduleName}/${businessName}'
import ${ClassName}Modal from './modules/${ClassName}Modal.vue'
import { treeData } from '@/utils/treeutil'
import { checkPermission } from '@/utils/permissions'
import { getDictArray } from '@/utils/dict'

export default {
  name: '${ClassName}List',
  components: {
    T,
    ${ClassName}Modal
  },
  data () {
    return {
      labelCol: {
        xs: { span: 24 },
        sm: { span: 5 }
      },
      wrapperCol: {
        xs: { span: 24 },
        sm: { span: 16 }
      },
      form: this.$form.createForm(this),
      mdl: {},
      // 高级搜索 展开/关闭
      advanced: false,
      // 查询参数
      queryParam: {},
      // 表头
      columns: [
#foreach($column in $columns)
#set($dictType=$column.dictType)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.list)
#if($column.htmlType == "datetime")
        {
          title: '${comment}',
          dataIndex: '${javaField}',
          sorter: true
        },
#else
        {
          title: '${comment}',
    #if($dictType != "")
          scopedSlots: { customRender: '${javaField}Slot' },
    #end
          dataIndex: '${javaField}'
        },
#end
#end
#end
        {
          title: '操作',
          width: '120px',
          dataIndex: 'action',
          scopedSlots: { customRender: 'action' }
        }
      ],
      data: [],
      pagination: false,
      loading: false,
#foreach($column in $columns)
    #set($dictType=$column.dictType)
    #set($javaField=$column.javaField)
    #if($column.list)
        #if($dictType != "")
      ${javaField}Array: [],
      ${javaField}Map: {},
        #end
    #end
#end
      addEnable: checkPermission('${permissionPrefix}:add'),
      editEnabel: checkPermission('${permissionPrefix}:edit'),
      removeEnable: checkPermission('${permissionPrefix}:remove')
    }
  },
  filters: {
    dictFilter(dataIndex, Map) {
      return Map[dataIndex].text
    },
  },
  created () {
    this.init()
    this.fetch()
  },
  methods: {
    init() {
      #foreach($column in $columns)
          #set($dictType=$column.dictType)
          #set($javaField=$column.javaField)
          #if($column.list)
              #if($dictType != "")
    getDictArray('${dictType}').then(data => {
      this.${javaField}Array = data
      const ${javaField}Map = {}
      this.${javaField}Array.forEach(d => {
              ${javaField}Map[d.dictValue] = { text: d.dictLabel }
      })
      this.${javaField}Map = ${javaField}Map
    })
              #end
          #end
      #end
    },
    onSelectChange (selectedRowKeys, selectedRows) {
      this.selectedRowKeys = selectedRowKeys
      this.selectedRows = selectedRows
    },
    handleAdd () {
      this.$refs.modal.add()
    },
    handleEdit (record) {
      this.$refs.modal.edit(record)
    },
    handleOk () {
      this.$refs.table.refresh(true)
    },
#set($foo="$")
    delByIds (ids) {
      del${className}({ ids: ids.join(',') }).then(res => {
        if (res.code === 0) {
          this.${foo}message.success('删除成功')
          this.handleOk()
        } else {
          this.${foo}message.error(res.msg)
        }
        this.selectedRowKeys = []
      })
    },
    fetch () {
      this.loading = true
      get${ClassName}List(Object.assign(this.queryParam)).then(res => {
        this.data = treeData(res.rows, '${treeCode}','${treeParentCode}')
        this.loading = false
        console.log(this.data)
      })
    }
  }
}
</script>
